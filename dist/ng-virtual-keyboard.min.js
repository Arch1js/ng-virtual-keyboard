!function(n){n.module("ng-virtual-keyboard",[]).constant("VKI_CONFIG",{}).service("ngVirtualKeyboardService",["VKI_CONFIG",function(n){var e=function(n){var t;if(null===n||"object"!=typeof n)return n;if(n instanceof Date)return t=new Date,t.setTime(n.getTime()),t;if(n instanceof Array){t=[];for(var r=0,o=n.length;r<o;r++)t[r]=e(n[r]);return t}if(n instanceof Object){t={};for(var a in n)n.hasOwnProperty(a)&&(t[a]=e(n[a]));return t}throw new Error("Unable to copy obj! Its type isn't supported.")},t=function(n){var e,t=$(n);return t&&(e=$(n).getkeyboard()),e};return{attach:function(t,r,o){var a=e(n);r=r||{};for(var i in r)r.hasOwnProperty(i)&&(a[i]=r[i]);if(a.accepted=r.accepted||o,r.autoUpdateModel&&(a.change=r.change||o),a.events){var c=function(n){return function(e,t,r){a.events[n](e,$(this).data("keyboard"),this)}};for(var u in a.events)$(t).on(u,c(u))}var f=$(t).keyboard(a);if(f&&a.extensions)for(var s in a.extensions){var v=a.extensions[s];v?f[s](v):f[s]()}},getKeyboard:function(n){return t(n)},getKeyboardById:function(n){return t("#"+n)}}}]).directive("ngVirtualKeyboard",["ngVirtualKeyboardService","$timeout",function(n,e){return{restrict:"A",require:"?ngModel",scope:{config:"=ngVirtualKeyboard"},link:function(t,r,o,a){var i=r[0];if(a&&i){var c=function(t,r){n.attach(t,r,function(n,r,o){e(function(){a.$setViewValue(t.value)})})},u=function(e){var t=n.getKeyboard(e);t&&t.destroy()};c(i,t.config),t.$watch("config",function(n,e){n&&(u(i),c(i,n))},!0),t.$on("$destroy",function(){u(i)})}}}}])}(angular);